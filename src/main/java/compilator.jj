options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = false;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}


PARSER_BEGIN(Parser)

public class Parser {
    public static void main(String args[]) throws ParseException {
        Parser parser = new Parser(System.in);
        System.out.print("Enter expression: ");
        parser.E();
    }
}
PARSER_END(Parser)

SKIP :
{
    "\r" | "\t"
}

TOKEN :
{
    <every: "every">|
    <minute: "minute">|
    <hour: "hour">|
    <day: "day">|
    <month: "month">|
    <minutes: "minutes">|
    <hours: "hours">|
    <days: "days">|
    <at: "at">|
    <on: "on">|
    <separator: ":">|
    <num: ["0"-"9"](["0"-"9"])*>|
    <space: " ">|
    <EOL: "\n">
}

void E():
{
    String t;
}
{
    <every>(<space>)?t=T()<EOL>
        {
            System.out.println("Translation: " + t);
        }
}
String T():
{
    String hour;
    String minute;
    String p;
}
{
    <day><space><at><space>hour=N()<separator>minute=N()
        {
            return String.format("%s %s * * *", minute, hour);
        }
    |
    p=P()
        {
            return p;
        }
}
String P():
{
    String day;
    String hour;
    String minute;
    String f;
}
{
    <month><space><on><space><day><space>day=N()<space><at><space>hour=N()<separator>minute=N()
        {
            return String.format("%s %s %s * *", minute, hour, day);
        }
    |
    f=F()
        {
            return f;
        }
}
String F():
{
    String number;
    String literal;
}
{
    number=N()<space>literal=L()
    {
        switch(literal) {
            case "minutes":
                return String.format("*/%s * * * *", number);
            case "hours":
                return String.format("* */%s * * *", number);
            case "days":
                return String.format("* * */%s * *", number);
        }
    }
}
String N():
{
    Token t;
}
{
    t=<num>
        {
            return t.image;
        }
}
String L():
{
    Token t;
}
{
    t=<minutes>
        {
            return t.image;
        }
    |
    t=<hours>
        {
            return t.image;
        }
    |
    t=<days>
        {
            return t.image;
        }
}